// 2021-04-22: fix anyKey, remove noDevUpdate, stFbOptions: rh_things_to_do
// 2021-04-16: Add interstitial states to allow skipping through prompts
// TB CSM -- 9-Apr-21 merged into Bill's version
// TB CSM -- 7-Apr-21 starPot: nxtPkg, starRH: chgPkg
// TB CSM -- 1-Apr-21 Star: saveRec
// TB CSM -- 5-Mar-21 stPlayPause adds CGroup whenPlayPaused
// TB CSM -- 5-Mar-21 finishRec => whenNav, circle to start/stop recording
// TB CSM -- 2-Mar-21 original version
{
  config: {
      minShortPressMS: 50,
      minLongPressMS: 1000,
      default_volume: 6,
      default_speed: 5,
      shortIdleMS: 5000,
      longIdleMS: 20000,
      powerCheckMS: 300000,
      systemAudio: system/audio/,
      initState: stWakeup
  },
  CGroups: {
    whenSleeping:  { Home:       stWakeup,
                     Circle:     stWakeup },
    whenAwake:     { Home:       stWakeup,
                     Circle__:   stWakeup,
                     Home__:     stSleepy,
                     LongIdle:   stSleepy },
    whenUSB:       { starPlus:   stCloseUSB },
    whenPlaying:   { Plus:       stPlayLouder,
                     Minus:      stPlaySofter,
                     Pot:        stPlayPause,
                     Lhand__:    stPlayJumpBack,
                     Rhand__:    stPlayJumpFwd },
    whenPlayPaused:{ Pot:        stPlayResume },
    whenNav:       { Lhand:      stOnPrevSubj,
                     Rhand:      stOnNextSubj,
                     Tree:       stOnNextMsg,
                     Table:      stOnPrevMsg,
                     AudioDone:  stWait,
                     ShortIdle:  stWait,
                     starCircle: stOnFeedback },
    whenFeedback:  { Star:       stFbOptions,
                     Circle:     stStartRec },
    whenRecording: { Pot:        stPauseRec,
                     Circle:     stFinishRec,
                     Tree:       stPlayRec,
                     Table:      stCancelRec,
                     Star:       stSaveRec },
    whenIdle:      { LowBattery: stLowBatt,
                     starPlus:   stUSBmode,
                     Plus:       stIdleLouder,
                     Minus:      stIdleSofter,
                     starTable:  stTest,
                     starMinus:  stOnUpdate,
                     starPot:    stNxtPkg,
                     starRhand:  stChgPkg },
  },
  CStates: {
    stWakeup:       { Actions: [ LED(_), bgLED(bgPulse), changePkg, playSys(welcome) ], CGroups:[ whenAwake, whenPlaying, whenNav ], AudioStart: stWelcoming },
    stWelcoming:    {                                                           CGroups:[ whenAwake, whenPlaying, whenNav ], AudioDone: stPromptSubj },
    stPromptSubj:   { Actions: [ playSys(rh_for_subj) ],                        CGroups:[ whenAwake, whenPlaying, whenNav ], AudioStart: stPromptingSub },
    stPromptingSub: {                                                           CGroups:[ whenAwake, whenPlaying, whenNav ], AudioDone: stWait },

    stWait:         {                                                           CGroups:[ whenAwake, whenNav, whenIdle ] },
    stSleepy:       { Actions: [ bgLED(O_9),  saveSt(1),  setTimer(5000) ],     CGroups:[ whenAwake ], anyKey: stUnSleepy, Timer: stGoSleep },
    stUnSleepy:     { Actions: [ bgLED(bgPulse), goSavedSt(1) ],                CGroups:[ whenAwake ] },
    stGoSleep:      { Actions: [ bgLED(R_3),  setTimer(1000) ],                 CGroups:[ whenSleeping ], Timer: stFallAsleep },
    stFallAsleep:   { Actions: [ powerDown ],                                   CGroups:[ whenSleeping ] },

    stPlayLouder:   { Actions: [ volAdj( 1),  goPrevSt ],                       CGroups:[ whenAwake, whenPlaying ] },
    stPlaySofter:   { Actions: [ volAdj(-1),  goPrevSt ],                       CGroups:[ whenAwake, whenPlaying ] },
    stPlayPause:    { Actions: [ saveSt( 2),  pausePlay ],                      CGroups:[ whenAwake, whenPlaying, whenNav, whenPlayPaused ] },
    stPlayResume:   { Actions: [ resumePlay,  goSavedSt(2) ],                   CGroups:[ whenAwake, whenPlaying, whenNav ] },
    stPlayJumpBack: { Actions: [ posAdj(-7) ],                                  CGroups:[ whenAwake, whenPlaying, whenNav ] },
    stPlayJumpFwd:  { Actions: [ posAdj(60) ],                                  CGroups:[ whenAwake, whenPlaying, whenNav ] },

    stOnPrevSubj:   { Actions: [ subjAdj(-1),  playSubj(nm) ],                  CGroups:[ whenAwake, whenPlaying, whenNav ], AudioStart: stAnnouncing },
    stOnNextSubj:   { Actions: [ subjAdj( 1),  playSubj(nm) ],                  CGroups:[ whenAwake, whenPlaying, whenNav ], AudioStart: stAnnouncing },
    stAnnouncing:   {                                                           CGroups:[ whenAwake, whenPlaying, whenNav ], AudioDone: stInvitation },
    stInvitation:   { Actions: [ playSubj(pr) ],                                CGroups:[ whenAwake, whenPlaying, whenNav ], AudioDone: stPromptNextSubj },
    stPromptNextSubj:{ Actions: [ playSys(rh_for_nxt_subj) ],                   CGroups:[ whenAwake, whenPlaying, whenNav ] },
    stOnPrevMsg:    { Actions: [ msgAdj( -1),  playSubj(msg) ],                 CGroups:[ whenAwake, whenPlaying, whenNav ] AudioStart: stPlaying },
    stOnNextMsg:    { Actions: [ msgAdj(  1),  playSubj(msg) ],                 CGroups:[ whenAwake, whenPlaying, whenNav ] AudioStart: stPlaying },
    stPlaying:      {                                                           CGroups:[ whenAwake, whenPlaying, whenNav ] },

    stOnFeedback:   { Actions: [ playSys(cir_record_ideas) ],                   CGroups:[ whenAwake, whenFeedback ] },
    stFbOptions:    { Actions: [ playSys(rh_things_to_do) ],                    CGroups:[ whenAwake ] },

    stStartRec:     { Actions: [ startRec ],                                    CGroups:[ whenAwake, whenRecording ] },
    stPauseRec:     { Actions: [ saveSt( 2),  pauseRec ],                       CGroups:[ whenAwake, whenRecording ] },
    stFinishRec:    { Actions: [ finishRec ],                                   CGroups:[ whenAwake, whenRecording ] },
    stPlayRec:      { Actions: [ playRec ],                                     CGroups:[ whenAwake, whenRecording ] },
    stSaveRec:      { Actions: [ saveRec(sv) ],                                 CGroups:[ whenAwake, whenNav ] },
    stCancelRec:    { Actions: [ saveRec(del) ],                                CGroups:[ whenAwake, whenNav ] },

    stOnLowBatt:    { Actions: [ bgLED(R_9) ],                                  CGroups:[ whenAwake ] },
    stOnUpdate:     { Actions: [ sysBoot ],                                     CGroups:[ whenAwake ] },
    stIdleLouder:   { Actions: [ volAdj( 1),  playSys(louder),  goPrevSt ],     CGroups:[ whenAwake, whenPlaying ] },
    stIdleSofter:   { Actions: [ volAdj(-1),  playSys(softer),  goPrevSt ],     CGroups:[ whenAwake, whenPlaying ] },
    stUSBmode:      { Actions: [ bgLED(O2_8), startUSB ],                       CGroups:[ whenUSB ] },
    stCloseUSB:     { Actions: [ endUSB,      bgLED(G_29), setTimer(1000) ],    Timer: stWakeup },
    stOnCharging:   { Actions: [ showCharge,  goPrevSt ],                       CGroups:[ whenAwake, whenIdle ] },
    stLowBatt:      {                                                           CGroups:[ whenAwake, whenIdle ] },
    stGoFWU:        {                                                           CGroups:[ whenAwake ] },
    stTest:         { Actions: [ sysTest ],                                     CGroups:[ whenAwake ] },
    stNxtPkg:       { Actions: [ playNxtPkg ],                                  CGroups:[ whenAwake, whenIdle ] },
    stChgPkg:       { Actions: [ changePkg ],                                   CGroups:[ whenAwake, whenIdle, whenNav ] },
  }
}
